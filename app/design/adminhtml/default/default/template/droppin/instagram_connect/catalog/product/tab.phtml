<?php
/**
 * Droppin
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Open Software License (OSL 3.0)
 * that is bundled with this package in the file LICENSE.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/osl-3.0.php
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade InstagramConnect to newer
 * versions in the future.
 *
 * @category    Droppin
 * @package     Droppin_InstagramConnect
 * @copyright   Copyright (c) 2012 Droppin LLC
 * @license     http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
?>

<?php
/**
 * Custom tab template
 */
?>
<?php
    $_product = Mage::registry('current_product');
    $productId =  $_product->getId();
    //echo ($_product->getData('instagram_source'));
?>
<table cellspacing="0">
    <tr>
        <td style="width:100%;"><h3 class="icon-head head-products"><?php echo Mage::helper('catalog')->__('Choose Instagram Images') ?></h3></td>
    </tr>
     <tr>
        <td>
            <label for="custom_field"><strong>Input hashtag</strong></label>&nbsp;
            <input type="text" class="input-text" name="hashtags_field" id="hashtags_field" />&nbsp;
            <label for="custom_field"><strong>Input number images update</strong></label>&nbsp;
            <input type="text" class="input-text" name="num_update" id="num_update" maxlength="2" size="5"/>&nbsp;
        </td>
        <td class="a-right">
            <button style="margin-right:100px;" onclick="return updateImage();" href="javascript:void(0);">Update Images</button>
        </td>

        <td class="a-right" style="">
            <button style="float:right;" onclick="return clearAll();" href="javascript:void(0);">Clear All</button>
        </td> 

    </tr>
</table>
<!-- <div class="input-field">
 <label for="custom_field">Input hashtags</label>
 <input type="text" class="input-text" name="custom_field" id="custom_field" />
 <a style="float:right;" onclick="return updateImage();" href="javascript:void(0);">Update Images</a> 
</div> -->
<div id='content-images'>
</div>
<script>
function paging(num){
   // $('review-please-wait').show();
    //$$('div.item-images').hide();
    $$('[id^="paging-"]').invoke("setStyle",{'color':'orange'});
    $$('.paging-'+num).invoke("setStyle",{'color':'red'});
    $('loading-mask').show();
    $$('[id^="item-image-"]').invoke("setStyle",{'display':'none'});
    $('item-image-'+num).show();
    $('loading-mask').hide();
    //$('review-please-wait').hide();
}

function pagingBottom(num){
   // $('review-please-wait').show();
    //$$('div.item-images').hide();
    $$('[id^="paging-bottom-"]').invoke("setStyle",{'color':'orange'});
    $('loading-mask').show();
    $$('[id^="item-image-"]').invoke("setStyle",{'display':'none'});
    $('item-image-'+num).show();
    $('loading-mask').hide();
    //$('review-please-wait').hide();
}

function updateImage() {
    var hashtags = $('hashtags_field').getValue();
    var numUpdate = $('num_update').getValue();
    if(isNaN(numUpdate) || !numUpdate.length){
        numUpdate = 2;
    }
    new Ajax.Request("<?php echo $this->getUrl('instagramconnect/adminhtml_instagramconnect/updateFilter'); ?>", {
                parameters: {
                    isAjax: 1, 
                    method: 'POST',
                    hashtags : hashtags,
                    numupdate : numUpdate
                },
                onSuccess: function(transport) {

                    try{
                        response = eval('(' + transport.responseText + ')');
                        
                    } catch (e) {
                        response = {};
                    }
                    if (response.err) {
                        alert("<?php echo $this->jsQuoteEscape($this->__('An error occured. Make sure you are authenticated with Instagram.')); ?>");
                    }
                    if (response.success) {
                        $('content-images').replace('<div id="content-images"></div>');
                        $('content-images').insert(response.data);
                    } else {
                        var msg = response.error_messages;
                        if (typeof(msg)=='object') {
                            msg = msg.join("\n");
                        }
                        if (msg) {
                            $('review-please-wait').hide();
                            alert(msg);
                            return;
                        }
                    }
                    $('review-please-wait').hide();
                    alert("<?php echo $this->jsQuoteEscape($this->__('Unknown Error. Please try again later.')); ?>");
                    return;
                },
                onFailure: function(){
                    alert("<?php echo $this->jsQuoteEscape($this->__('Server Error. Please try again.')) ?>");
                    $('review-please-wait').hide();
                }
            });
            return false;
        }
function clearAll() {
    var hashtags = $('hashtags_field').getValue();
    new Ajax.Request("<?php echo $this->getUrl('instagramconnect/adminhtml_instagramconnect/clearAll'); ?>", {
                parameters: {
                    isAjax: 1,
                    hashtags : hashtags,
                    method: 'POST'
                },
                onSuccess: function(transport) {

                    try{
                        response = eval('(' + transport.responseText + ')');
                        
                    } catch (e) {
                        response = {};
                    }
                    
                    if (response.success) {
                        $('content-images').replace('<div id="content-images"></div>');
                        //$('content-images').insert(response.data);
                    } else if(response.success == false){
                        alert("<?php echo $this->jsQuoteEscape($this->__('Error when delete all. Please try again later.')); ?>");
                            return;
                    }else {
                        var msg = response.error_messages;
                        if (typeof(msg)=='object') {
                            msg = msg.join("\n");
                        }
                        if (msg) {
                            $('review-please-wait').hide();
                            alert(msg);
                            return;
                        }
                    }
                    $('review-please-wait').hide();
                    alert("<?php echo $this->jsQuoteEscape($this->__('Unknown Error. Please try again later.')); ?>");
                    return;
                },
                onFailure: function(){
                    alert("<?php echo $this->jsQuoteEscape($this->__('Server Error. Please try again.')) ?>");
                    $('review-please-wait').hide();
                }
            });
            return false;
        }
 function approveImage(id) {
    new Ajax.Request("<?php echo Mage::getUrl('instagramconnect/adminhtml_instagramconnect/approve'); ?>", {
                parameters: {isAjax: 1, 
                    method: 'POST', 
                    id: id,
                    product_id: '<?php echo $productId ?>'
                },
                onSuccess: function(transport) {
                    try{
                        response = eval('(' + transport.responseText + ')');
                    } catch (e) {
                        response = {};
                    }
                    if (response.success) {
                        $(id).remove();
                    } else {
                        var msg = response.error_messages;
                        if (typeof(msg)=='object') {
                            msg = msg.join("\n");
                        }
                        if (msg) {
                            $('review-please-wait').hide();
                            alert(msg);
                            return;
                        }
                    }
                    $('review-please-wait').hide();
                    alert("<?php echo $this->jsQuoteEscape($this->__('Unknown Error. Please try again later.')); ?>");
                    return;
                },
                onFailure: function(){
                    alert("<?php echo $this->jsQuoteEscape($this->__('Server Error. Please try again.')) ?>");
                    $('review-please-wait').hide();
                }
            });
            return false;
        }


function deleteImage(id) {
    new Ajax.Request("<?php echo $this->getUrl('instagramconnect/adminhtml_instagramconnect/delete'); ?>", {
                parameters: {
                    isAjax: 1, 
                    method: 'POST', 
                    id: id
                },
                onSuccess: function(transport) {
                    try{
                        response = eval('(' + transport.responseText + ')');
                    } catch (e) {
                        response = {};
                    }
                    if (response.success) {
                        $(id).remove();
                    } else {
                        var msg = response.error_messages;
                        if (typeof(msg)=='object') {
                            msg = msg.join("\n");
                        }
                        if (msg) {
                            $('review-please-wait').hide();
                            alert(msg);
                            return;
                        }
                    }
                    $('review-please-wait').hide();
                    alert("<?php echo $this->jsQuoteEscape($this->__('Unknown Error. Please try again later.')); ?>");
                    return;
                },
                onFailure: function(){
                    alert("<?php echo $this->jsQuoteEscape($this->__('Server Error. Please try again.')) ?>");
                    $('review-please-wait').hide();
                }
            });
            return false;
        }
function deleteApprovedImage(id) {
    new Ajax.Request("<?php echo $this->getUrl('instagramconnect/adminhtml_instagramconnect/deleteApproved'); ?>", {
                parameters: {
                    isAjax: 1, 
                    method: 'POST', 
                    id: id,
                    product_id: '<?php echo $productId ?>'
                },
                onSuccess: function(transport) {
                    try{
                        response = eval('(' + transport.responseText + ')');
                    } catch (e) {
                        response = {};
                    }
                    if (response.success) {
                        $(id).remove();
                    } else {
                        var msg = response.error_messages;
                        if (typeof(msg)=='object') {
                            msg = msg.join("\n");
                        }
                        if (msg) {
                            $('review-please-wait').hide();
                            alert(msg);
                            return;
                        }
                    }
                    $('review-please-wait').hide();
                    alert("<?php echo $this->jsQuoteEscape($this->__('Unknown Error. Please try again later.')); ?>");
                    return;
                },
                onFailure: function(){
                    alert("<?php echo $this->jsQuoteEscape($this->__('Server Error. Please try again.')) ?>");
                    $('review-please-wait').hide();
                }
            });
            return false;
        }
        
</script>
